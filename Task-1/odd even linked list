Given a singly linked list, group all odd nodes together followed by the even nodes.



/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if (head == NULL || head -> next == NULL) {
            return head;
        }
        ListNode* odd = head;
        ListNode* even = head -> next;
        ListNode* even_head = even;
        while (1) 
        {
            if (even -> next) 
            {
                odd -> next = even -> next;
                odd = odd -> next;
            }
            else 
            {
                odd -> next= even_head;
                return head;
            }
            if (odd -> next)
            {
                even -> next = odd -> next;
                even = even -> next;
            } 
            else 
            {
                odd -> next = even_head;
                even -> next = NULL;
                return head;
            }
        }
        return head;
    }
};

